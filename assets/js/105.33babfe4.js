(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{776:function(e,v,_){"use strict";_.r(v);var o=_(12),c=Object(o.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h1",{attrs:{id:"服务端命令-dockerd"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#服务端命令-dockerd"}},[e._v("#")]),e._v(" 服务端命令(dockerd)")]),e._v(" "),_("h2",{attrs:{id:"dockerd-命令选项"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#dockerd-命令选项"}},[e._v("#")]),e._v(" dockerd 命令选项")]),e._v(" "),_("ul",[_("li",[_("code",[e._v('--api-cors-header=""')]),e._v('：CORS 头部域，默认不允许 CORS，要允许任意的跨域访问，可以指定为 "*"；')]),e._v(" "),_("li",[_("code",[e._v('--authorization-plugin=""')]),e._v("：载入认证的插件；")]),e._v(" "),_("li",[_("code",[e._v('-b=""')]),e._v("：将容器挂载到一个已存在的网桥上。指定为 "),_("code",[e._v("none")]),e._v(" 时则禁用容器的网络，与 "),_("code",[e._v("--bip")]),e._v(" 选项互斥；")]),e._v(" "),_("li",[_("code",[e._v('--bip=""')]),e._v("：让动态创建的 "),_("code",[e._v("docker0")]),e._v(" 网桥采用给定的 CIDR 地址; 与 "),_("code",[e._v("-b")]),e._v(" 选项互斥；")]),e._v(" "),_("li",[_("code",[e._v('--cgroup-parent=""')]),e._v("：指定 cgroup 的父组，默认 fs cgroup 驱动为 "),_("code",[e._v("/docker")]),e._v("，systemd cgroup 驱动为 "),_("code",[e._v("system.slice")]),e._v("；")]),e._v(" "),_("li",[_("code",[e._v('--cluster-store=""')]),e._v("：构成集群（如 "),_("code",[e._v("Swarm")]),e._v("）时，集群键值数据库服务地址；")]),e._v(" "),_("li",[_("code",[e._v('--cluster-advertise=""')]),e._v("：构成集群时，自身的被访问地址，可以为 "),_("code",[e._v("host:port")]),e._v(" 或 "),_("code",[e._v("interface:port")]),e._v("；")]),e._v(" "),_("li",[_("code",[e._v('--cluster-store-opt=""')]),e._v("：构成集群时，键值数据库的配置选项；")]),e._v(" "),_("li",[_("code",[e._v('--config-file="/etc/docker/daemon.json"')]),e._v("：daemon 配置文件路径；")]),e._v(" "),_("li",[_("code",[e._v('--containerd=""')]),e._v("：containerd 文件的路径；")]),e._v(" "),_("li",[_("code",[e._v("-D, --debug=true|false")]),e._v("：是否使用 Debug 模式。缺省为 false；")]),e._v(" "),_("li",[_("code",[e._v('--default-gateway=""')]),e._v("：容器的 IPv4 网关地址，必须在网桥的子网段内；")]),e._v(" "),_("li",[_("code",[e._v('--default-gateway-v6=""')]),e._v("：容器的 IPv6 网关地址；")]),e._v(" "),_("li",[_("code",[e._v("--default-ulimit=[]")]),e._v("：默认的 ulimit 值；")]),e._v(" "),_("li",[_("code",[e._v("--disable-legacy-registry=true|false")]),e._v("：是否允许访问旧版本的镜像仓库服务器；")]),e._v(" "),_("li",[_("code",[e._v('--dns=""')]),e._v("：指定容器使用的 DNS 服务器地址；")]),e._v(" "),_("li",[_("code",[e._v('--dns-opt=""')]),e._v("：DNS 选项；")]),e._v(" "),_("li",[_("code",[e._v("--dns-search=[]")]),e._v("：DNS 搜索域；")]),e._v(" "),_("li",[_("code",[e._v("--exec-opt=[]")]),e._v("：运行时的执行选项；")]),e._v(" "),_("li",[_("code",[e._v('--exec-root=""')]),e._v("：容器执行状态文件的根路径，默认为 "),_("code",[e._v("/var/run/docker")]),e._v("；")]),e._v(" "),_("li",[_("code",[e._v('--fixed-cidr=""')]),e._v("：限定分配 IPv4 地址范围；")]),e._v(" "),_("li",[_("code",[e._v('--fixed-cidr-v6=""')]),e._v("：限定分配 IPv6 地址范围；")]),e._v(" "),_("li",[_("code",[e._v('-G, --group=""')]),e._v("：分配给 unix 套接字的组，默认为 "),_("code",[e._v("docker")]),e._v("；")]),e._v(" "),_("li",[_("code",[e._v('-g, --graph=""')]),e._v("：Docker 运行时的根路径，默认为 "),_("code",[e._v("/var/lib/docker")]),e._v("；")]),e._v(" "),_("li",[_("code",[e._v("-H, --host=[]")]),e._v("：指定命令对应 Docker daemon 的监听接口，可以为 unix 套接字 "),_("code",[e._v("unix:///path/to/socket")]),e._v("，文件句柄 "),_("code",[e._v("fd://socketfd")]),e._v(" 或 tcp 套接字 "),_("code",[e._v("tcp://[host[:port]]")]),e._v("，默认为 "),_("code",[e._v("unix:///var/run/docker.sock")]),e._v("；")]),e._v(" "),_("li",[_("code",[e._v("--icc=true|false")]),e._v("：是否启用容器间以及跟 daemon 所在主机的通信。默认为 true。")]),e._v(" "),_("li",[_("code",[e._v("--insecure-registry=[]")]),e._v("：允许访问给定的非安全仓库服务；")]),e._v(" "),_("li",[_("code",[e._v('--ip=""')]),e._v("：绑定容器端口时候的默认 IP 地址。缺省为 "),_("code",[e._v("0.0.0.0")]),e._v("；")]),e._v(" "),_("li",[_("code",[e._v("--ip-forward=true|false")]),e._v("：是否检查启动在 Docker 主机上的启用 IP 转发服务，默认开启。注意关闭该选项将不对系统转发能力进行任何检查修改；")]),e._v(" "),_("li",[_("code",[e._v("--ip-masq=true|false")]),e._v("：是否进行地址伪装，用于容器访问外部网络，默认开启；")]),e._v(" "),_("li",[_("code",[e._v("--iptables=true|false")]),e._v("：是否允许 Docker 添加 iptables 规则。缺省为 true；")]),e._v(" "),_("li",[_("code",[e._v("--ipv6=true|false")]),e._v("：是否启用 IPv6 支持，默认关闭；")]),e._v(" "),_("li",[_("code",[e._v('-l, --log-level="debug|info|warn|error|fatal"')]),e._v("：指定日志输出级别；")]),e._v(" "),_("li",[_("code",[e._v('--label="[]"')]),e._v("：添加指定的键值对标注；")]),e._v(" "),_("li",[_("code",[e._v('--log-driver="json-file|syslog|journald|gelf|fluentd|awslogs|splunk|etwlogs|gcplogs|none"')]),e._v("：指定日志后端驱动，默认为 "),_("code",[e._v("json-file")]),e._v("；")]),e._v(" "),_("li",[_("code",[e._v("--log-opt=[]")]),e._v("：日志后端的选项；")]),e._v(" "),_("li",[_("code",[e._v("--mtu=VALUE")]),e._v("：指定容器网络的 "),_("code",[e._v("mtu")]),e._v("；")]),e._v(" "),_("li",[_("code",[e._v('-p=""')]),e._v("：指定 daemon 的 PID 文件路径。缺省为 "),_("code",[e._v("/var/run/docker.pid")]),e._v("；")]),e._v(" "),_("li",[_("code",[e._v("--raw-logs")]),e._v("：输出原始，未加色彩的日志信息；")]),e._v(" "),_("li",[_("code",[e._v("--registry-mirror=<scheme>://<host>")]),e._v("：指定 "),_("code",[e._v("docker pull")]),e._v(" 时使用的注册服务器镜像地址；")]),e._v(" "),_("li",[_("code",[e._v('-s, --storage-driver=""')]),e._v("：指定使用给定的存储后端；")]),e._v(" "),_("li",[_("code",[e._v("--selinux-enabled=true|false")]),e._v("：是否启用 SELinux 支持。缺省值为 false。SELinux 目前尚不支持 overlay 存储驱动；")]),e._v(" "),_("li",[_("code",[e._v("--storage-opt=[]")]),e._v("：驱动后端选项；")]),e._v(" "),_("li",[_("code",[e._v("--tls=true|false")]),e._v("：是否对 Docker daemon 启用 TLS 安全机制，默认为否；")]),e._v(" "),_("li",[_("code",[e._v("--tlscacert=/.docker/ca.pem")]),e._v("：TLS CA 签名的可信证书文件路径；")]),e._v(" "),_("li",[_("code",[e._v("--tlscert=/.docker/cert.pem")]),e._v("：TLS 可信证书文件路径；")]),e._v(" "),_("li",[_("code",[e._v("--tlscert=/.docker/key.pem")]),e._v("：TLS 密钥文件路径；")]),e._v(" "),_("li",[_("code",[e._v("--tlsverify=true|false")]),e._v("：启用 TLS 校验，默认为否；")]),e._v(" "),_("li",[_("code",[e._v("--userland-proxy=true|false")]),e._v("：是否使用用户态代理来实现容器间和出容器的回环通信，默认为 true；")]),e._v(" "),_("li",[_("code",[e._v("--userns-remap=default|uid:gid|user:group|user|uid")]),e._v("：指定容器的用户命名空间，默认是创建新的 UID 和 GID 映射到容器内进程。")])]),e._v(" "),_("h2",{attrs:{id:"参考"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[e._v("#")]),e._v(" 参考")]),e._v(" "),_("ul",[_("li",[_("a",{attrs:{href:"https://docs.docker.com/engine/reference/commandline/dockerd/",target:"_blank",rel:"noopener noreferrer"}},[e._v("官方文档"),_("OutboundLink")],1)])])])}),[],!1,null,null,null);v.default=c.exports}}]);