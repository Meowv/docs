(window.webpackJsonp=window.webpackJsonp||[]).push([[163],{799:function(t,e,o){"use strict";o.r(e);var r=o(12),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"访问仓库"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#访问仓库"}},[t._v("#")]),t._v(" 访问仓库")]),t._v(" "),o("p",[t._v("仓库（"),o("code",[t._v("Repository")]),t._v("）是集中存放镜像的地方。")]),t._v(" "),o("p",[t._v("一个容易混淆的概念是注册服务器（"),o("code",[t._v("Registry")]),t._v("）。实际上注册服务器是管理仓库的具体服务器，每个服务器上可以有多个仓库，而每个仓库下面有多个镜像。从这方面来说，仓库可以被认为是一个具体的项目或目录。例如对于仓库地址 "),o("code",[t._v("docker.io/ubuntu")]),t._v(" 来说，"),o("code",[t._v("docker.io")]),t._v(" 是注册服务器地址，"),o("code",[t._v("ubuntu")]),t._v(" 是仓库名。")]),t._v(" "),o("p",[t._v("大部分时候，并不需要严格区分这两者的概念。")])])}),[],!1,null,null,null);e.default=s.exports}}]);