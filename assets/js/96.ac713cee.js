(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{784:function(s,t,a){"use strict";a.r(t);var e=a(11),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"图形验证码识别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图形验证码识别"}},[s._v("#")]),s._v(" 图形验证码识别")]),s._v(" "),a("h2",{attrs:{id:"图形验证码识别技术"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图形验证码识别技术"}},[s._v("#")]),s._v(" 图形验证码识别技术")]),s._v(" "),a("p",[s._v("阻碍我们爬虫的。有时候正是在登录或者请求一些数据时候的图形验证码。因此这里我们讲解一种能将图片翻译成文字的技术。将图片翻译成文字一般被成为光学文字识别（Optical Character Recognition），简写为OCR。实现OCR的库不是很多，特别是开源的。因为这块存在一定的技术壁垒（需要大量的数据、算法、机器学习、深度学习知识等），并且如果做好了具有很高的商业价值。因此开源的比较少。这里介绍一个比较优秀的图像识别开源库：Tesseract。")]),s._v(" "),a("h2",{attrs:{id:"tesseract"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tesseract"}},[s._v("#")]),s._v(" Tesseract")]),s._v(" "),a("p",[s._v("Tesseract是一个OCR库，目前由谷歌赞助。Tesseract是目前公认最优秀、最准确的开源OCR库。Tesseract具有很高的识别度，也具有很高的灵活性，他可以通过训练识别任何字体。")]),s._v(" "),a("h2",{attrs:{id:"安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[s._v("#")]),s._v(" 安装")]),s._v(" "),a("h3",{attrs:{id:"windows"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#windows"}},[s._v("#")]),s._v(" Windows")]),s._v(" "),a("p",[s._v("在 "),a("a",{attrs:{href:"https://github.com/tesseract-ocr/",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/tesseract-ocr/"),a("OutboundLink")],1),s._v(" 下载可执行文件，然后一顿点击下一步安装即可，放在不需要权限的纯英文路径下")]),s._v(" "),a("h3",{attrs:{id:"linux"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linux"}},[s._v("#")]),s._v(" Linux")]),s._v(" "),a("p",[s._v("可以在 "),a("a",{attrs:{href:"https://github.com/tesseract-ocr/tesseract/wiki/Compiling",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/tesseract-ocr/tesseract/wiki/Compiling"),a("OutboundLink")],1),s._v(" 下载源码自行编译，或者(ubuntu下)通过以下命令进行安装 "),a("code",[s._v("sudo apt install tesseract-ocr")])]),s._v(" "),a("h3",{attrs:{id:"mac"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mac"}},[s._v("#")]),s._v(" Mac")]),s._v(" "),a("p",[s._v("用Homebrew即可方便安装，"),a("code",[s._v("brew install tesseract")])]),s._v(" "),a("h2",{attrs:{id:"设置环境变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置环境变量"}},[s._v("#")]),s._v(" 设置环境变量")]),s._v(" "),a("p",[s._v("安装完成后，如果想要在命令行中使用Tesseract，那么应该设置环境变量。Mac和Linux在安装的时候就默认已经设置好了。在Windows下把tesseract.exe所在的路径添加到PATH环境变量中。")]),s._v(" "),a("p",[s._v("还有一个环境变量需要设置的是，要把训练的数据文件路径也放到环境变量中")]),s._v(" "),a("p",[s._v("在环境变量中，添加一个 TESSDATA_PREFIX=~~~\\teseractdata")]),s._v(" "),a("h2",{attrs:{id:"在命令行中使用tesseract识别图像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在命令行中使用tesseract识别图像"}},[s._v("#")]),s._v(" 在命令行中使用tesseract识别图像")]),s._v(" "),a("p",[s._v("如果想要在cmd下能够使用tesseract命令，那么需要把tesseract.exe所在的目录放到PATH环境变量中。然后使用命令：tesseract 图片路径 文件路径。")]),s._v(" "),a("p",[a("code",[s._v("tesseract a.png a")])]),s._v(" "),a("p",[s._v("那么就会识别出a.png中的图片，并且把文字写入到a.txt中。如果不想写入文件直接想显示在终端，那么不要加文件名就可以了。")]),s._v(" "),a("h2",{attrs:{id:"在代码中使用tesseract识别图像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在代码中使用tesseract识别图像"}},[s._v("#")]),s._v(" 在代码中使用tesseract识别图像")]),s._v(" "),a("p",[s._v("在Python代码中操作tesseract。需要安装一个库，叫做pytesseract。通过pip的方式即可安装：")]),s._v(" "),a("p",[a("code",[s._v("pip install pytesseract")])]),s._v(" "),a("p",[s._v("并且，需要读取图片，需要借助一个第三方库叫做PIL。通过pip list看下是否安装。如果没有安装，通过pip的方式安装：")]),s._v(" "),a("p",[a("code",[s._v("pip install PIL")])]),s._v(" "),a("p",[s._v("使用pytesseract将图片上的文字转换为文本文字")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 导入pytesseract库")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" pytesseract\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 导入Image库")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" PIL "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Image\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定tesseract.exe所在的路径")]),s._v("\npytesseract"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("pytesseract"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tesseract_cmd "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("r'D:\\Program Files\\Tesseract-OCR\\tesseract.exe'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 打开图片")]),s._v("\nimage "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Image"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a.png"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 调用image_to_string将图片转换为文字")]),s._v("\ntext "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" pytesseract"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("image_to_string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("image"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" lang"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'chi_sim'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h2",{attrs:{id:"用pytesseract自动识别图形验证码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用pytesseract自动识别图形验证码"}},[s._v("#")]),s._v(" 用pytesseract自动识别图形验证码")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" time\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" urllib "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" request\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" pytesseract\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" PIL "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Image\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    pytesseract"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("pytesseract"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tesseract_cmd "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("r'D:\\Program Files\\Tesseract-OCR\\tesseract.exe'")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        url "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'https://e.coding.net/api/getCaptcha'")]),s._v("\n        request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("urlretrieve"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'captcha.png'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        image "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Image"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'captcha.png'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        text "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" pytesseract"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("image_to_string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("image"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sleep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" __name__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"__main__"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])])])}),[],!1,null,null,null);t.default=n.exports}}]);