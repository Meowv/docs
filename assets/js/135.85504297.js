(window.webpackJsonp=window.webpackJsonp||[]).push([[135],{744:function(a,s,t){"use strict";t.r(s);var e=t(2),n=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"linuxkit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linuxkit"}},[a._v("#")]),a._v(" LinuxKit")]),a._v(" "),s("p",[s("code",[a._v("LinuxKit")]),a._v(" 这个工具可以将多个 Docker 镜像组成一个最小化、可自由定制的 Linux 系统，最后的生成的系统只有几十 M 大小，可以很方便的在云端进行部署。")]),a._v(" "),s("p",[a._v("下面我们在 macOS 上通过实例，来编译并运行一个全部由 Docker 镜像组成的包含 nginx 服务的 Linux 系统。")]),a._v(" "),s("h2",{attrs:{id:"安装-linuxkit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装-linuxkit"}},[a._v("#")]),a._v(" 安装 Linuxkit")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("brew tap linuxkit/linuxkit\n\nbrew "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--HEAD")]),a._v(" linuxkit\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h2",{attrs:{id:"克隆源代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#克隆源代码"}},[a._v("#")]),a._v(" 克隆源代码")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-b")]),a._v(" master "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--depth")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" https://github.com/linuxkit/linuxkit\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" linuxkit\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h2",{attrs:{id:"编译-linux-系统"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编译-linux-系统"}},[a._v("#")]),a._v(" 编译 Linux 系统")]),a._v(" "),s("p",[a._v("LinuxKit 通过 "),s("code",[a._v("yaml")]),a._v(" 文件配置。")]),a._v(" "),s("p",[a._v("我们来查看 "),s("code",[a._v("linuxkit.yml")]),a._v(" 文件，了解各个字段的作用。")]),a._v(" "),s("p",[s("code",[a._v("kernel")]),a._v(" 字段定义了内核版本。")]),a._v(" "),s("p",[s("code",[a._v("init")]),a._v(" 字段中配置系统启动时的初始化顺序。")]),a._v(" "),s("p",[s("code",[a._v("onboot")]),a._v(" 字段配置系统级的服务。")]),a._v(" "),s("p",[s("code",[a._v("services")]),a._v(" 字段配置镜像启动后运行的服务。")]),a._v(" "),s("p",[s("code",[a._v("files")]),a._v(" 字段配置制作镜像时打包入镜像中的文件。")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("linuxkit build linuxkit.yml\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h2",{attrs:{id:"启动-linux-系统"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启动-linux-系统"}},[a._v("#")]),a._v(" 启动 Linux 系统")]),a._v(" "),s("p",[a._v("编译成功后，接下来启动这个 Linux 系统。")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("linuxkit run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-publish")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8080")]),a._v(":80/tcp linuxkit\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("接下来在浏览器中打开 "),s("code",[a._v("127.0.0.1:8080")]),a._v(" 即可看到 nginx 默认页面。")])])}),[],!1,null,null,null);s.default=n.exports}}]);